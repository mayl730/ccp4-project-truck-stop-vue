{"remainingRequest":"/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/src/App.vue","mtime":1652274137816},{"path":"/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/node_modules/css-loader/dist/cjs.js","mtime":1651747309112},{"path":"/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1651747312074},{"path":"/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/node_modules/postcss-loader/src/index.js","mtime":1651747309951},{"path":"/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/node_modules/cache-loader/dist/cjs.js","mtime":1651747307098},{"path":"/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/node_modules/vue-loader/lib/index.js","mtime":1651747311058}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojYXBwIHsKICBmb250LWZhbWlseTogIkF2ZW5pciIsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7CiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7CiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgY29sb3I6ICMyYzNlNTA7CiAgbWFyZ2luLXRvcDogNjBweDsKfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <Map />\n    <!-- <br />{{ test }} -->\n    <SearchCriteria />\n    <div>\n    </div>\n\n    <h3>The following is the data retrieved from DB</h3>\n    <select name=\"states\" id=\"states\" v-on:change=\"selectState\">\n      <option hidden>Choose a State</option>\n      <option\n        vi-bind:value=\"el.state\"\n        v-for=\"el in States\"\n        v-bind:key=\"el.state\"\n        >{{ el.state }}</option\n      >\n    </select>\n\n    <select name=\"cities\" id=\"cities\" v-on:change=\"selectCity\">\n      <option hidden>Choose a City</option>\n      <option\n        v-bind:value=\"el.city\"\n        v-for=\"el in Cities\"\n        v-bind:key=\"el.city\"\n        >{{ el.city }}</option\n      >\n    </select>\n\n    <select name=\"highways\" id=\"highways\" v-on:change=\"selectHighway\">\n      <option hidden>Choose a Highway</option>\n      <option\n        v-bind:value=\"el.highway\"\n        v-for=\"el in Highways\"\n        v-bind:key=\"el.highway\"\n        >{{ el.highway }}</option\n      >\n    </select>\n\n    <select name=\"restaurants\" id=\"restaurants\" v-on:change=\"selectRestaurant\">\n      <option hidden>Choose a Restaurant</option>\n      <option\n        v-bind:value=\"el.name\"\n        v-for=\"el in Restaurants\"\n        v-bind:key=\"el.name\"\n        >{{ el.name }}</option\n      >\n    </select>\n\n    <h4>Filtered Locations</h4>\n    <div v-for=\"location in FilteredLocations\" v-bind:key=\"location.id\">\n      {{ location.name }}\n      {{ location.latitude }}\n      {{ location.longitude }}\n      {{ location.state }}\n      {{ location.city }}\n      {{ location.highway }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport Map from \"./components/Map\";\nimport SearchCriteria from \"./components/SearchCriteria\";\nimport { mapState } from \"vuex\";\nimport gql from \"graphql-tag\";\n\nconst getStates = gql`\n  query {\n    States {\n      state\n    }\n  }\n`;\n\nconst getCities = gql`\n  query Cities($state: String) {\n    Cities(state: $state) {\n      city\n    }\n  }\n`;\n\nconst getHighways = gql`\n  query Highways($cityOrState: cityOrState) {\n    Highways(cityOrState: $cityOrState) {\n      highway\n    }\n  }\n`;\n\nconst getRestaurants = gql`\n  query Restaurants {\n    Restaurants {\n      id\n      name\n    }\n  }\n`;\n\nconst getLocations = gql`\n  query FilteredLocations($conditions: filterConditions) {\n    FilteredLocations(conditions: $conditions) {\n      id\n      name\n      latitude\n      longitude\n      state\n      city\n    }\n  }\n`;\n\nexport default {\n  name: \"app\",\n  components: {\n    Map,\n    SearchCriteria,\n  },\n  data() {\n    return {\n      currState: \"\",\n      currCity: \"\",\n      currHighway: \"\",\n      currRestaurant: \"\",\n      States: [],\n      Cities: [],\n      FilterByState: [],\n      FilteredLocations: [],\n      Highways: [],\n      Restaurants: [],\n    };\n  },\n  computed: mapState({\n    test: (state) => state.search.test,\n  }),\n  methods: {\n    selectState: function(e) {\n      this.currState = e.target.value;\n    },\n    selectCity: function(e) {\n      this.currCity = e.target.value;\n    },\n    selectHighway: function(e) {\n      this.currHighway = e.target.value;\n    },\n    selectRestaurant: function(e) {\n      this.currRestaurant = e.target.value;\n    },\n  },\n  apollo: {\n    States: getStates,\n    Cities: {\n      query: getCities,\n      variables() {\n        return { state: this.currState };\n      },\n    },\n    FilteredLocations: {\n      query: getLocations,\n      variables() {\n        return {\n          conditions: {\n            state: this.currState,\n            city: this.currCity,\n            highway: this.currHighway,\n            restaurant: this.currRestaurant,\n          },\n        };\n      },\n    },\n    Highways: {\n      query: getHighways,\n      variables() {\n        return {\n          cityOrState: { city: this.currCity, state: this.currState },\n        };\n      },\n    },\n    Restaurants: getRestaurants,\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]}]}