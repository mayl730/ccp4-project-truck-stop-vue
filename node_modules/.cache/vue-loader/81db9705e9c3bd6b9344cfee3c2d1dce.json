{"remainingRequest":"/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/src/components/SearchCriteria.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/src/components/SearchCriteria.vue","mtime":1652447598880},{"path":"/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/node_modules/cache-loader/dist/cjs.js","mtime":1651747307098},{"path":"/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/node_modules/babel-loader/lib/index.js","mtime":1651747309998},{"path":"/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/node_modules/cache-loader/dist/cjs.js","mtime":1651747307098},{"path":"/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/node_modules/vue-loader/lib/index.js","mtime":1651747311058}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEFjdGlvbnMgfSBmcm9tICJ2dWV4IjsKaW1wb3J0IGdxbCBmcm9tICJncmFwaHFsLXRhZyI7Cgpjb25zdCBnZXRTdGF0ZXMgPSBncWxgCiAgcXVlcnkgewogICAgU3RhdGVzIHsKICAgICAgc3RhdGUKICAgIH0KICB9CmA7Cgpjb25zdCBnZXRDaXRpZXMgPSBncWxgCiAgcXVlcnkgQ2l0aWVzKCRzdGF0ZTogU3RyaW5nKSB7CiAgICBDaXRpZXMoc3RhdGU6ICRzdGF0ZSkgewogICAgICBjaXR5CiAgICB9CiAgfQpgOwoKY29uc3QgZ2V0SGlnaHdheXMgPSBncWxgCiAgcXVlcnkgSGlnaHdheXMoJGNpdHlPclN0YXRlOiBjaXR5T3JTdGF0ZSkgewogICAgSGlnaHdheXMoY2l0eU9yU3RhdGU6ICRjaXR5T3JTdGF0ZSkgewogICAgICBoaWdod2F5CiAgICB9CiAgfQpgOwoKLy8gY29uc3QgZ2V0UmVzdGF1cmFudHMgPSBncWxgCi8vICAgcXVlcnkgUmVzdGF1cmFudHMgewovLyAgICAgUmVzdGF1cmFudHMgewovLyAgICAgICBpZAovLyAgICAgICBuYW1lCi8vICAgICAgIGNvbmNlcHRfaWNvbgovLyAgICAgfQovLyAgIH0KLy8gYDsKCmNvbnN0IGdldFJlc3RhdXJhbnRzID0gZ3FsYAogIHF1ZXJ5IFJlc3RhdXJhbnRzKCRjb25kaXRpb25zOiByZXN0YXVyYW50Q29uZGl0aW9ucykgewogICAgUmVzdGF1cmFudHMoY29uZGl0aW9uczogJGNvbmRpdGlvbnMpIHsKICAgICAgcmVzdGF1cmFudF9uYW1lCiAgICB9CiAgfQpgOwoKY29uc3QgZ2V0TG9jYXRpb25zID0gZ3FsYAogIHF1ZXJ5IEZpbHRlcmVkTG9jYXRpb25zKCRjb25kaXRpb25zOiBmaWx0ZXJDb25kaXRpb25zKSB7CiAgICBGaWx0ZXJlZExvY2F0aW9ucyhjb25kaXRpb25zOiAkY29uZGl0aW9ucykgewogICAgICBpZAogICAgICBsYXRpdHVkZQogICAgICBsb25naXR1ZGUKICAgICAgbmFtZQogICAgICBzdGF0ZQogICAgICBjaXR5CiAgICAgIGhpZ2h3YXkKICAgICAgZXhpdE51bWJlcgogICAgICBhZGRyZXNzMQogICAgICB6aXAKICAgICAgbWFpbl9waG9uZQogICAgfQogIH0KYDsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiU2VhcmNoQ3JpdGVyaWEiLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjdXJyU3RhdGU6ICIiLAogICAgICBjdXJyQ2l0eTogIiIsCiAgICAgIGN1cnJIaWdod2F5OiAiIiwKICAgICAgLy8gY3VyclJlc3RhdXJhbnQ6ICIiLAogICAgICBjdXJyUmVzdGF1cmFudDogWyIiXSwKICAgICAgU3RhdGVzOiBbXSwKICAgICAgQ2l0aWVzOiBbXSwKICAgICAgRmlsdGVyQnlTdGF0ZTogW10sCiAgICAgIEZpbHRlcmVkTG9jYXRpb25zOiBbXSwKICAgICAgSGlnaHdheXM6IFtdLAogICAgICBSZXN0YXVyYW50czogW10sCiAgICAgIHNlbGVjdEl0ZW1zOiBbXSwKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBzZWxlY3RTdGF0ZTogZnVuY3Rpb24oZSkgewogICAgICB0aGlzLmN1cnJTdGF0ZSA9IGUudGFyZ2V0LnZhbHVlOwogICAgfSwKICAgIHNlbGVjdENpdHk6IGZ1bmN0aW9uKGUpIHsKICAgICAgdGhpcy5jdXJyQ2l0eSA9IGUudGFyZ2V0LnZhbHVlOwogICAgfSwKICAgIHNlbGVjdEhpZ2h3YXk6IGZ1bmN0aW9uKGUpIHsKICAgICAgdGhpcy5jdXJySGlnaHdheSA9IGUudGFyZ2V0LnZhbHVlOwogICAgfSwKICAgIC8vIHNlbGVjdFJlc3RhdXJhbnQ6IGZ1bmN0aW9uKGUpIHsKICAgIC8vICAgdGhpcy5jdXJyUmVzdGF1cmFudCA9IGUudGFyZ2V0LnZhbHVlOwogICAgLy8gfSwKICAgIHNlbGVjdFJlc3RhdXJhbnQ6IGZ1bmN0aW9uKGUpIHsKICAgICAgdGhpcy5jdXJyUmVzdGF1cmFudCA9IFtlLnRhcmdldC52YWx1ZV07CiAgICB9LAogICAgc2VsZWN0UmVzdGF1cmFudFdpdGhDaGVja0JveDogZnVuY3Rpb24oZSkgewogICAgICBpZiAoZS50YXJnZXQuY2hlY2tlZCkgewogICAgICAgIHRoaXMuY3VyclJlc3RhdXJhbnQgPSBbLi4udGhpcy5jdXJyUmVzdGF1cmFudCwgZS50YXJnZXQuaWRdOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuY3VyclJlc3RhdXJhbnQgPSB0aGlzLmN1cnJSZXN0YXVyYW50LmZpbHRlcigKICAgICAgICAgIChlbCkgPT4gZWwgIT09IGUudGFyZ2V0LmlkCiAgICAgICAgKTsKICAgICAgfQogICAgfSwKICAgIHJlc2V0U2VsZWN0aW9uOiBmdW5jdGlvbigpIHsKICAgICAgdGhpcy5jdXJyU3RhdGUgPSAiIjsKICAgICAgdGhpcy5jdXJyQ2l0eSA9ICIiOwogICAgICB0aGlzLmN1cnJIaWdod2F5ID0gIiI7CiAgICAgIHRoaXMuY3VyclJlc3RhdXJhbnQgPSBbIiJdOwogICAgICB0aGlzLnNlbGVjdEl0ZW1zID0gW107CiAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgIHRoaXMuYWRkTWFya2Vycyh0aGlzLkZpbHRlcmVkTG9jYXRpb25zKTsKICAgICAgfSwgMSk7CiAgICB9LAogICAgLi4ubWFwQWN0aW9ucyhbImFkZE1hcmtlcnMiLCAic2V0VmlldyJdKSwKICB9LAogIGFwb2xsbzogewogICAgU3RhdGVzOiBnZXRTdGF0ZXMsCiAgICBDaXRpZXM6IHsKICAgICAgcXVlcnk6IGdldENpdGllcywKICAgICAgdmFyaWFibGVzKCkgewogICAgICAgIHJldHVybiB7IHN0YXRlOiB0aGlzLmN1cnJTdGF0ZSB9OwogICAgICB9LAogICAgfSwKICAgIEZpbHRlcmVkTG9jYXRpb25zOiB7CiAgICAgIHF1ZXJ5OiBnZXRMb2NhdGlvbnMsCiAgICAgIHZhcmlhYmxlcygpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgY29uZGl0aW9uczogewogICAgICAgICAgICBzdGF0ZTogdGhpcy5jdXJyU3RhdGUsCiAgICAgICAgICAgIGNpdHk6IHRoaXMuY3VyckNpdHksCiAgICAgICAgICAgIGhpZ2h3YXk6IHRoaXMuY3VyckhpZ2h3YXksCiAgICAgICAgICAgIHJlc3RhdXJhbnQ6IHRoaXMuY3VyclJlc3RhdXJhbnQsCiAgICAgICAgICB9LAogICAgICAgIH07CiAgICAgIH0sCiAgICB9LAogICAgSGlnaHdheXM6IHsKICAgICAgcXVlcnk6IGdldEhpZ2h3YXlzLAogICAgICB2YXJpYWJsZXMoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIGNpdHlPclN0YXRlOiB7IGNpdHk6IHRoaXMuY3VyckNpdHksIHN0YXRlOiB0aGlzLmN1cnJTdGF0ZSB9LAogICAgICAgIH07CiAgICAgIH0sCiAgICB9LAogICAgLy8gUmVzdGF1cmFudHM6IGdldFJlc3RhdXJhbnRzLAogICAgUmVzdGF1cmFudHM6IHsKICAgICAgcXVlcnk6IGdldFJlc3RhdXJhbnRzLAogICAgICB2YXJpYWJsZXMoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIGNvbmRpdGlvbnM6IHsKICAgICAgICAgICAgc3RhdGU6IHRoaXMuY3VyclN0YXRlLAogICAgICAgICAgICBjaXR5OiB0aGlzLmN1cnJDaXR5LAogICAgICAgICAgICBoaWdod2F5OiB0aGlzLmN1cnJIaWdod2F5LAogICAgICAgICAgfSwKICAgICAgICB9OwogICAgICB9LAogICAgfSwKICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmFkZE1hcmtlcnModGhpcy5GaWx0ZXJlZExvY2F0aW9ucyk7CiAgfSwKfTsK"},{"version":3,"sources":["SearchCriteria.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"SearchCriteria.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"search-criteria\">\n    <select\n      name=\"states\"\n      id=\"states\"\n      v-on:change=\"selectState\"\n      v-model=\"currState\"\n    >\n      <option value=\"\" disabled>Choose a State</option>\n      <option\n        vi-bind:value=\"el.state\"\n        v-for=\"el in States\"\n        v-bind:key=\"el.state\"\n        >{{ el.state }}</option\n      >\n    </select>\n\n    <select\n      name=\"cities\"\n      id=\"cities\"\n      v-on:change=\"selectCity\"\n      v-model=\"currCity\"\n    >\n      <option value=\"\" disabled>Choose a City</option>\n      <option\n        v-bind:value=\"el.city\"\n        v-for=\"el in Cities\"\n        v-bind:key=\"el.city\"\n        >{{ el.city }}</option\n      >\n    </select>\n\n    <select\n      name=\"highways\"\n      id=\"highways\"\n      v-on:change=\"selectHighway\"\n      v-model=\"currHighway\"\n    >\n      <option value=\"\" disabled>Choose a Highway</option>\n      <option\n        v-bind:value=\"el.highway\"\n        v-for=\"el in Highways\"\n        v-bind:key=\"el.highway\"\n        >{{ el.highway }}</option\n      >\n    </select>\n\n    <select\n      name=\"restaurants\"\n      id=\"restaurants\"\n      v-on:change=\"selectRestaurant\"\n      v-model=\"currRestaurant[0]\"\n    >\n      <option value=\"\" disabled>Choose a Restaurant</option>\n      <option\n        v-bind:value=\"el.restaurant_name\"\n        v-for=\"el in Restaurants\"\n        v-bind:key=\"el.restaurant_name\"\n        >{{ el.restaurant_name }}</option\n      >\n    </select>\n\n    <div id=\"restaurants-continer\">\n      <div\n        v-for=\"(el, index) in Restaurants\"\n        v-bind:key=\"el.id\"\n        id=\"restaurant\"\n      >\n        <input\n          type=\"checkbox\"\n          v-bind:id=\"el.restaurant_name\"\n          v-on:change=\"selectRestaurantWithCheckBox\"\n          v-bind:checked=\"currRestaurant.includes(el.restaurant_name)\"\n          v-model=\"selectItems[index]\"\n        />\n        <label v-bind:for=\"el.restaurant_name\">{{ el.restaurant_name }}</label>\n      </div>\n    </div>\n\n    <div class=\"button\">\n      <button\n        type=\"button\"\n        v-on:click=\"\n          addMarkers(FilteredLocations);\n          setView('searchResult');\n        \"\n      >\n        Search\n      </button>\n    </div>\n    <br />\n    <a\n      href=\"#\"\n      @click=\"\n        resetSelection();\n        setView('searchCriteria');\n      \"\n      >Clear Selections</a\n    >\n\n    <div v-for=\"location in FilteredLocations\" v-bind:key=\"location.id\">\n      <!-- {{Restaurants}} -->\n      {{ location }}\n      <!-- {{ location.latitude }}\n      {{ location.longitude }}\n      {{ location.state }}\n      {{ location.city }}\n      {{ location.highway }} -->\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from \"vuex\";\nimport gql from \"graphql-tag\";\n\nconst getStates = gql`\n  query {\n    States {\n      state\n    }\n  }\n`;\n\nconst getCities = gql`\n  query Cities($state: String) {\n    Cities(state: $state) {\n      city\n    }\n  }\n`;\n\nconst getHighways = gql`\n  query Highways($cityOrState: cityOrState) {\n    Highways(cityOrState: $cityOrState) {\n      highway\n    }\n  }\n`;\n\n// const getRestaurants = gql`\n//   query Restaurants {\n//     Restaurants {\n//       id\n//       name\n//       concept_icon\n//     }\n//   }\n// `;\n\nconst getRestaurants = gql`\n  query Restaurants($conditions: restaurantConditions) {\n    Restaurants(conditions: $conditions) {\n      restaurant_name\n    }\n  }\n`;\n\nconst getLocations = gql`\n  query FilteredLocations($conditions: filterConditions) {\n    FilteredLocations(conditions: $conditions) {\n      id\n      latitude\n      longitude\n      name\n      state\n      city\n      highway\n      exitNumber\n      address1\n      zip\n      main_phone\n    }\n  }\n`;\n\nexport default {\n  name: \"SearchCriteria\",\n  data() {\n    return {\n      currState: \"\",\n      currCity: \"\",\n      currHighway: \"\",\n      // currRestaurant: \"\",\n      currRestaurant: [\"\"],\n      States: [],\n      Cities: [],\n      FilterByState: [],\n      FilteredLocations: [],\n      Highways: [],\n      Restaurants: [],\n      selectItems: [],\n    };\n  },\n  methods: {\n    selectState: function(e) {\n      this.currState = e.target.value;\n    },\n    selectCity: function(e) {\n      this.currCity = e.target.value;\n    },\n    selectHighway: function(e) {\n      this.currHighway = e.target.value;\n    },\n    // selectRestaurant: function(e) {\n    //   this.currRestaurant = e.target.value;\n    // },\n    selectRestaurant: function(e) {\n      this.currRestaurant = [e.target.value];\n    },\n    selectRestaurantWithCheckBox: function(e) {\n      if (e.target.checked) {\n        this.currRestaurant = [...this.currRestaurant, e.target.id];\n      } else {\n        this.currRestaurant = this.currRestaurant.filter(\n          (el) => el !== e.target.id\n        );\n      }\n    },\n    resetSelection: function() {\n      this.currState = \"\";\n      this.currCity = \"\";\n      this.currHighway = \"\";\n      this.currRestaurant = [\"\"];\n      this.selectItems = [];\n      setTimeout(() => {\n        this.addMarkers(this.FilteredLocations);\n      }, 1);\n    },\n    ...mapActions([\"addMarkers\", \"setView\"]),\n  },\n  apollo: {\n    States: getStates,\n    Cities: {\n      query: getCities,\n      variables() {\n        return { state: this.currState };\n      },\n    },\n    FilteredLocations: {\n      query: getLocations,\n      variables() {\n        return {\n          conditions: {\n            state: this.currState,\n            city: this.currCity,\n            highway: this.currHighway,\n            restaurant: this.currRestaurant,\n          },\n        };\n      },\n    },\n    Highways: {\n      query: getHighways,\n      variables() {\n        return {\n          cityOrState: { city: this.currCity, state: this.currState },\n        };\n      },\n    },\n    // Restaurants: getRestaurants,\n    Restaurants: {\n      query: getRestaurants,\n      variables() {\n        return {\n          conditions: {\n            state: this.currState,\n            city: this.currCity,\n            highway: this.currHighway,\n          },\n        };\n      },\n    },\n  },\n  created() {\n    this.addMarkers(this.FilteredLocations);\n  },\n};\n</script>\n"]}]}