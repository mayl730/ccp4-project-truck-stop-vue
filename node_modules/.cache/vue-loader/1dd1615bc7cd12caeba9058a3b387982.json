{"remainingRequest":"/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/src/components/SearchCriteria.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/src/components/SearchCriteria.vue","mtime":1652317222543},{"path":"/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/node_modules/cache-loader/dist/cjs.js","mtime":1651747307098},{"path":"/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/node_modules/babel-loader/lib/index.js","mtime":1651747309998},{"path":"/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/node_modules/cache-loader/dist/cjs.js","mtime":1651747307098},{"path":"/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/node_modules/vue-loader/lib/index.js","mtime":1651747311058}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcFN0YXRlLCBtYXBBY3Rpb25zIH0gZnJvbSAidnVleCI7CmltcG9ydCBncWwgZnJvbSAiZ3JhcGhxbC10YWciOwoKY29uc3QgZ2V0U3RhdGVzID0gZ3FsYAogIHF1ZXJ5IHsKICAgIFN0YXRlcyB7CiAgICAgIHN0YXRlCiAgICB9CiAgfQpgOwoKY29uc3QgZ2V0Q2l0aWVzID0gZ3FsYAogIHF1ZXJ5IENpdGllcygkc3RhdGU6IFN0cmluZykgewogICAgQ2l0aWVzKHN0YXRlOiAkc3RhdGUpIHsKICAgICAgY2l0eQogICAgfQogIH0KYDsKCmNvbnN0IGdldEhpZ2h3YXlzID0gZ3FsYAogIHF1ZXJ5IEhpZ2h3YXlzKCRjaXR5T3JTdGF0ZTogY2l0eU9yU3RhdGUpIHsKICAgIEhpZ2h3YXlzKGNpdHlPclN0YXRlOiAkY2l0eU9yU3RhdGUpIHsKICAgICAgaGlnaHdheQogICAgfQogIH0KYDsKCmNvbnN0IGdldFJlc3RhdXJhbnRzID0gZ3FsYAogIHF1ZXJ5IFJlc3RhdXJhbnRzIHsKICAgIFJlc3RhdXJhbnRzIHsKICAgICAgaWQKICAgICAgbmFtZQogICAgfQogIH0KYDsKCmNvbnN0IGdldExvY2F0aW9ucyA9IGdxbGAKICBxdWVyeSBGaWx0ZXJlZExvY2F0aW9ucygkY29uZGl0aW9uczogZmlsdGVyQ29uZGl0aW9ucykgewogICAgRmlsdGVyZWRMb2NhdGlvbnMoY29uZGl0aW9uczogJGNvbmRpdGlvbnMpIHsKICAgICAgaWQKICAgICAgbmFtZQogICAgICBsYXRpdHVkZQogICAgICBsb25naXR1ZGUKICAgICAgc3RhdGUKICAgICAgY2l0eQogICAgfQogIH0KYDsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiU2VhcmNoQ3JpdGVyaWEiLAogIG1vdW50ZWQoKSB7CiAgICAvLyAvLyB0aGlzLmFkZE1hcmtlcnModGhpcy5GaWx0ZXJlZExvY2F0aW9ucyk7CiAgICAvLyB0aGlzLmdldExvY2F0aW9ucyh0aGlzLkZpbHRlcmVkTG9jYXRpb25zKTsKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjdXJyU3RhdGU6ICIiLAogICAgICBjdXJyQ2l0eTogIiIsCiAgICAgIGN1cnJIaWdod2F5OiAiIiwKICAgICAgY3VyclJlc3RhdXJhbnQ6ICIiLAogICAgICBTdGF0ZXM6IFtdLAogICAgICBDaXRpZXM6IFtdLAogICAgICBGaWx0ZXJCeVN0YXRlOiBbXSwKICAgICAgRmlsdGVyZWRMb2NhdGlvbnM6IFtdLAogICAgICBIaWdod2F5czogW10sCiAgICAgIFJlc3RhdXJhbnRzOiBbXSwKICAgIH07CiAgfSwKICBjb21wdXRlZDogbWFwU3RhdGUoewogICAgdGVzdDogKHN0YXRlKSA9PiBzdGF0ZS5zZWFyY2gudGVzdCwKICB9KSwKICBtZXRob2RzOiB7CiAgICBzZWxlY3RTdGF0ZTogZnVuY3Rpb24oZSkgewogICAgICB0aGlzLmN1cnJTdGF0ZSA9IGUudGFyZ2V0LnZhbHVlOwogICAgfSwKICAgIHNlbGVjdENpdHk6IGZ1bmN0aW9uKGUpIHsKICAgICAgdGhpcy5jdXJyQ2l0eSA9IGUudGFyZ2V0LnZhbHVlOwogICAgfSwKICAgIHNlbGVjdEhpZ2h3YXk6IGZ1bmN0aW9uKGUpIHsKICAgICAgdGhpcy5jdXJySGlnaHdheSA9IGUudGFyZ2V0LnZhbHVlOwogICAgfSwKICAgIHNlbGVjdFJlc3RhdXJhbnQ6IGZ1bmN0aW9uKGUpIHsKICAgICAgdGhpcy5jdXJyUmVzdGF1cmFudCA9IGUudGFyZ2V0LnZhbHVlOwogICAgfSwKICAgIC4uLm1hcEFjdGlvbnMoWyJhZGRNYXJrZXJzIl0pLAogIH0sCiAgYXBvbGxvOiB7CiAgICBTdGF0ZXM6IGdldFN0YXRlcywKICAgIENpdGllczogewogICAgICBxdWVyeTogZ2V0Q2l0aWVzLAogICAgICB2YXJpYWJsZXMoKSB7CiAgICAgICAgcmV0dXJuIHsgc3RhdGU6IHRoaXMuY3VyclN0YXRlIH07CiAgICAgIH0sCiAgICB9LAogICAgRmlsdGVyZWRMb2NhdGlvbnM6IHsKICAgICAgcXVlcnk6IGdldExvY2F0aW9ucywKICAgICAgdmFyaWFibGVzKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBjb25kaXRpb25zOiB7CiAgICAgICAgICAgIHN0YXRlOiB0aGlzLmN1cnJTdGF0ZSwKICAgICAgICAgICAgY2l0eTogdGhpcy5jdXJyQ2l0eSwKICAgICAgICAgICAgaGlnaHdheTogdGhpcy5jdXJySGlnaHdheSwKICAgICAgICAgICAgcmVzdGF1cmFudDogdGhpcy5jdXJyUmVzdGF1cmFudCwKICAgICAgICAgIH0sCiAgICAgICAgfTsKICAgICAgfSwKICAgIH0sCiAgICBIaWdod2F5czogewogICAgICBxdWVyeTogZ2V0SGlnaHdheXMsCiAgICAgIHZhcmlhYmxlcygpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgY2l0eU9yU3RhdGU6IHsgY2l0eTogdGhpcy5jdXJyQ2l0eSwgc3RhdGU6IHRoaXMuY3VyclN0YXRlIH0sCiAgICAgICAgfTsKICAgICAgfSwKICAgIH0sCiAgICBSZXN0YXVyYW50czogZ2V0UmVzdGF1cmFudHMsCiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5hZGRNYXJrZXJzKHRoaXMuRmlsdGVyZWRMb2NhdGlvbnMpOwogIH0KfTsK"},{"version":3,"sources":["SearchCriteria.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SearchCriteria.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"search-criteria\">\n    <select name=\"states\" id=\"states\" v-on:change=\"selectState\">\n      <option hidden>Choose a State</option>\n      <option\n        vi-bind:value=\"el.state\"\n        v-for=\"el in States\"\n        v-bind:key=\"el.state\"\n        >{{ el.state }}</option\n      >\n    </select>\n\n    <select name=\"cities\" id=\"cities\" v-on:change=\"selectCity\">\n      <option hidden>Choose a City</option>\n      <option\n        v-bind:value=\"el.city\"\n        v-for=\"el in Cities\"\n        v-bind:key=\"el.city\"\n        >{{ el.city }}</option\n      >\n    </select>\n\n    <select name=\"highways\" id=\"highways\" v-on:change=\"selectHighway\">\n      <option hidden>Choose a Highway</option>\n      <option\n        v-bind:value=\"el.highway\"\n        v-for=\"el in Highways\"\n        v-bind:key=\"el.highway\"\n        >{{ el.highway }}</option\n      >\n    </select>\n\n    <select name=\"restaurants\" id=\"restaurants\" v-on:change=\"selectRestaurant\">\n      <option hidden>Choose a Restaurant</option>\n      <option\n        v-bind:value=\"el.name\"\n        v-for=\"el in Restaurants\"\n        v-bind:key=\"el.name\"\n        >{{ el.name }}</option\n      >\n    </select>\n\n    <div class=\"button\">\n      <button type=\"button\" v-on:click=\"addMarkers(FilteredLocations)\">\n        Search\n      </button>\n    </div>\n\n    <h4>Filtered Locations</h4>\n    <div v-for=\"location in FilteredLocations\" v-bind:key=\"location.id\">\n      <!-- {{ location }} -->\n      {{ location.latitude }}\n      {{ location.longitude }}\n      {{ location.state }}\n      {{ location.city }}\n      {{ location.highway }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from \"vuex\";\nimport gql from \"graphql-tag\";\n\nconst getStates = gql`\n  query {\n    States {\n      state\n    }\n  }\n`;\n\nconst getCities = gql`\n  query Cities($state: String) {\n    Cities(state: $state) {\n      city\n    }\n  }\n`;\n\nconst getHighways = gql`\n  query Highways($cityOrState: cityOrState) {\n    Highways(cityOrState: $cityOrState) {\n      highway\n    }\n  }\n`;\n\nconst getRestaurants = gql`\n  query Restaurants {\n    Restaurants {\n      id\n      name\n    }\n  }\n`;\n\nconst getLocations = gql`\n  query FilteredLocations($conditions: filterConditions) {\n    FilteredLocations(conditions: $conditions) {\n      id\n      name\n      latitude\n      longitude\n      state\n      city\n    }\n  }\n`;\n\nexport default {\n  name: \"SearchCriteria\",\n  mounted() {\n    // // this.addMarkers(this.FilteredLocations);\n    // this.getLocations(this.FilteredLocations);\n  },\n  data() {\n    return {\n      currState: \"\",\n      currCity: \"\",\n      currHighway: \"\",\n      currRestaurant: \"\",\n      States: [],\n      Cities: [],\n      FilterByState: [],\n      FilteredLocations: [],\n      Highways: [],\n      Restaurants: [],\n    };\n  },\n  computed: mapState({\n    test: (state) => state.search.test,\n  }),\n  methods: {\n    selectState: function(e) {\n      this.currState = e.target.value;\n    },\n    selectCity: function(e) {\n      this.currCity = e.target.value;\n    },\n    selectHighway: function(e) {\n      this.currHighway = e.target.value;\n    },\n    selectRestaurant: function(e) {\n      this.currRestaurant = e.target.value;\n    },\n    ...mapActions([\"addMarkers\"]),\n  },\n  apollo: {\n    States: getStates,\n    Cities: {\n      query: getCities,\n      variables() {\n        return { state: this.currState };\n      },\n    },\n    FilteredLocations: {\n      query: getLocations,\n      variables() {\n        return {\n          conditions: {\n            state: this.currState,\n            city: this.currCity,\n            highway: this.currHighway,\n            restaurant: this.currRestaurant,\n          },\n        };\n      },\n    },\n    Highways: {\n      query: getHighways,\n      variables() {\n        return {\n          cityOrState: { city: this.currCity, state: this.currState },\n        };\n      },\n    },\n    Restaurants: getRestaurants,\n  },\n  created() {\n    this.addMarkers(this.FilteredLocations);\n  }\n};\n</script>\n"]}]}