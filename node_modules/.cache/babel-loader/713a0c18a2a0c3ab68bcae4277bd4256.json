{"remainingRequest":"/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/node_modules/babel-loader/lib/index.js!/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/src/components/SearchCriteria.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/src/components/SearchCriteria.vue","mtime":1652447598880},{"path":"/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/node_modules/cache-loader/dist/cjs.js","mtime":1651747307098},{"path":"/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/node_modules/babel-loader/lib/index.js","mtime":1651747309998},{"path":"/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/node_modules/cache-loader/dist/cjs.js","mtime":1651747307098},{"path":"/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/node_modules/vue-loader/lib/index.js","mtime":1651747311058}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvbWF5L2dpdC9jY3A0L2NjcDQtcHJvamVjdC5jb250aW51b3VzLWRlbGl2ZXJ5LXZ1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvbWF5L2dpdC9jY3A0L2NjcDQtcHJvamVjdC5jb250aW51b3VzLWRlbGl2ZXJ5LXZ1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsIGZyb20gIi9Vc2Vycy9tYXkvZ2l0L2NjcDQvY2NwNC1wcm9qZWN0LmNvbnRpbnVvdXMtZGVsaXZlcnktdnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90YWdnZWRUZW1wbGF0ZUxpdGVyYWwiOwoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NSgpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgcXVlcnkgRmlsdGVyZWRMb2NhdGlvbnMoJGNvbmRpdGlvbnM6IGZpbHRlckNvbmRpdGlvbnMpIHtcbiAgICBGaWx0ZXJlZExvY2F0aW9ucyhjb25kaXRpb25zOiAkY29uZGl0aW9ucykge1xuICAgICAgaWRcbiAgICAgIGxhdGl0dWRlXG4gICAgICBsb25naXR1ZGVcbiAgICAgIG5hbWVcbiAgICAgIHN0YXRlXG4gICAgICBjaXR5XG4gICAgICBoaWdod2F5XG4gICAgICBleGl0TnVtYmVyXG4gICAgICBhZGRyZXNzMVxuICAgICAgemlwXG4gICAgICBtYWluX3Bob25lXG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDUgPSBmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q1KCkgewogICAgcmV0dXJuIGRhdGE7CiAgfTsKCiAgcmV0dXJuIGRhdGE7Cn0KCmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDQoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIHF1ZXJ5IFJlc3RhdXJhbnRzKCRjb25kaXRpb25zOiByZXN0YXVyYW50Q29uZGl0aW9ucykge1xuICAgIFJlc3RhdXJhbnRzKGNvbmRpdGlvbnM6ICRjb25kaXRpb25zKSB7XG4gICAgICByZXN0YXVyYW50X25hbWVcbiAgICB9XG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0NCA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDQoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MygpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgcXVlcnkgSGlnaHdheXMoJGNpdHlPclN0YXRlOiBjaXR5T3JTdGF0ZSkge1xuICAgIEhpZ2h3YXlzKGNpdHlPclN0YXRlOiAkY2l0eU9yU3RhdGUpIHtcbiAgICAgIGhpZ2h3YXlcbiAgICB9XG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0MyA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDMoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MigpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgcXVlcnkgQ2l0aWVzKCRzdGF0ZTogU3RyaW5nKSB7XG4gICAgQ2l0aWVzKHN0YXRlOiAkc3RhdGUpIHtcbiAgICAgIGNpdHlcbiAgICB9XG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0MiA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDIoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0KCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICBxdWVyeSB7XG4gICAgU3RhdGVzIHtcbiAgICAgIHN0YXRlXG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdCA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdCgpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBtYXBBY3Rpb25zIH0gZnJvbSAidnVleCI7CmltcG9ydCBncWwgZnJvbSAiZ3JhcGhxbC10YWciOwp2YXIgZ2V0U3RhdGVzID0gZ3FsKF90ZW1wbGF0ZU9iamVjdCgpKTsKdmFyIGdldENpdGllcyA9IGdxbChfdGVtcGxhdGVPYmplY3QyKCkpOwp2YXIgZ2V0SGlnaHdheXMgPSBncWwoX3RlbXBsYXRlT2JqZWN0MygpKTsgLy8gY29uc3QgZ2V0UmVzdGF1cmFudHMgPSBncWxgCi8vICAgcXVlcnkgUmVzdGF1cmFudHMgewovLyAgICAgUmVzdGF1cmFudHMgewovLyAgICAgICBpZAovLyAgICAgICBuYW1lCi8vICAgICAgIGNvbmNlcHRfaWNvbgovLyAgICAgfQovLyAgIH0KLy8gYDsKCnZhciBnZXRSZXN0YXVyYW50cyA9IGdxbChfdGVtcGxhdGVPYmplY3Q0KCkpOwp2YXIgZ2V0TG9jYXRpb25zID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDUoKSk7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiU2VhcmNoQ3JpdGVyaWEiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjdXJyU3RhdGU6ICIiLAogICAgICBjdXJyQ2l0eTogIiIsCiAgICAgIGN1cnJIaWdod2F5OiAiIiwKICAgICAgLy8gY3VyclJlc3RhdXJhbnQ6ICIiLAogICAgICBjdXJyUmVzdGF1cmFudDogWyIiXSwKICAgICAgU3RhdGVzOiBbXSwKICAgICAgQ2l0aWVzOiBbXSwKICAgICAgRmlsdGVyQnlTdGF0ZTogW10sCiAgICAgIEZpbHRlcmVkTG9jYXRpb25zOiBbXSwKICAgICAgSGlnaHdheXM6IFtdLAogICAgICBSZXN0YXVyYW50czogW10sCiAgICAgIHNlbGVjdEl0ZW1zOiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IF9vYmplY3RTcHJlYWQoewogICAgc2VsZWN0U3RhdGU6IGZ1bmN0aW9uIHNlbGVjdFN0YXRlKGUpIHsKICAgICAgdGhpcy5jdXJyU3RhdGUgPSBlLnRhcmdldC52YWx1ZTsKICAgIH0sCiAgICBzZWxlY3RDaXR5OiBmdW5jdGlvbiBzZWxlY3RDaXR5KGUpIHsKICAgICAgdGhpcy5jdXJyQ2l0eSA9IGUudGFyZ2V0LnZhbHVlOwogICAgfSwKICAgIHNlbGVjdEhpZ2h3YXk6IGZ1bmN0aW9uIHNlbGVjdEhpZ2h3YXkoZSkgewogICAgICB0aGlzLmN1cnJIaWdod2F5ID0gZS50YXJnZXQudmFsdWU7CiAgICB9LAogICAgLy8gc2VsZWN0UmVzdGF1cmFudDogZnVuY3Rpb24oZSkgewogICAgLy8gICB0aGlzLmN1cnJSZXN0YXVyYW50ID0gZS50YXJnZXQudmFsdWU7CiAgICAvLyB9LAogICAgc2VsZWN0UmVzdGF1cmFudDogZnVuY3Rpb24gc2VsZWN0UmVzdGF1cmFudChlKSB7CiAgICAgIHRoaXMuY3VyclJlc3RhdXJhbnQgPSBbZS50YXJnZXQudmFsdWVdOwogICAgfSwKICAgIHNlbGVjdFJlc3RhdXJhbnRXaXRoQ2hlY2tCb3g6IGZ1bmN0aW9uIHNlbGVjdFJlc3RhdXJhbnRXaXRoQ2hlY2tCb3goZSkgewogICAgICBpZiAoZS50YXJnZXQuY2hlY2tlZCkgewogICAgICAgIHRoaXMuY3VyclJlc3RhdXJhbnQgPSBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMuY3VyclJlc3RhdXJhbnQpLCBbZS50YXJnZXQuaWRdKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmN1cnJSZXN0YXVyYW50ID0gdGhpcy5jdXJyUmVzdGF1cmFudC5maWx0ZXIoZnVuY3Rpb24gKGVsKSB7CiAgICAgICAgICByZXR1cm4gZWwgIT09IGUudGFyZ2V0LmlkOwogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgcmVzZXRTZWxlY3Rpb246IGZ1bmN0aW9uIHJlc2V0U2VsZWN0aW9uKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy5jdXJyU3RhdGUgPSAiIjsKICAgICAgdGhpcy5jdXJyQ2l0eSA9ICIiOwogICAgICB0aGlzLmN1cnJIaWdod2F5ID0gIiI7CiAgICAgIHRoaXMuY3VyclJlc3RhdXJhbnQgPSBbIiJdOwogICAgICB0aGlzLnNlbGVjdEl0ZW1zID0gW107CiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzLmFkZE1hcmtlcnMoX3RoaXMuRmlsdGVyZWRMb2NhdGlvbnMpOwogICAgICB9LCAxKTsKICAgIH0KICB9LCBtYXBBY3Rpb25zKFsiYWRkTWFya2VycyIsICJzZXRWaWV3Il0pKSwKICBhcG9sbG86IHsKICAgIFN0YXRlczogZ2V0U3RhdGVzLAogICAgQ2l0aWVzOiB7CiAgICAgIHF1ZXJ5OiBnZXRDaXRpZXMsCiAgICAgIHZhcmlhYmxlczogZnVuY3Rpb24gdmFyaWFibGVzKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBzdGF0ZTogdGhpcy5jdXJyU3RhdGUKICAgICAgICB9OwogICAgICB9CiAgICB9LAogICAgRmlsdGVyZWRMb2NhdGlvbnM6IHsKICAgICAgcXVlcnk6IGdldExvY2F0aW9ucywKICAgICAgdmFyaWFibGVzOiBmdW5jdGlvbiB2YXJpYWJsZXMoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIGNvbmRpdGlvbnM6IHsKICAgICAgICAgICAgc3RhdGU6IHRoaXMuY3VyclN0YXRlLAogICAgICAgICAgICBjaXR5OiB0aGlzLmN1cnJDaXR5LAogICAgICAgICAgICBoaWdod2F5OiB0aGlzLmN1cnJIaWdod2F5LAogICAgICAgICAgICByZXN0YXVyYW50OiB0aGlzLmN1cnJSZXN0YXVyYW50CiAgICAgICAgICB9CiAgICAgICAgfTsKICAgICAgfQogICAgfSwKICAgIEhpZ2h3YXlzOiB7CiAgICAgIHF1ZXJ5OiBnZXRIaWdod2F5cywKICAgICAgdmFyaWFibGVzOiBmdW5jdGlvbiB2YXJpYWJsZXMoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIGNpdHlPclN0YXRlOiB7CiAgICAgICAgICAgIGNpdHk6IHRoaXMuY3VyckNpdHksCiAgICAgICAgICAgIHN0YXRlOiB0aGlzLmN1cnJTdGF0ZQogICAgICAgICAgfQogICAgICAgIH07CiAgICAgIH0KICAgIH0sCiAgICAvLyBSZXN0YXVyYW50czogZ2V0UmVzdGF1cmFudHMsCiAgICBSZXN0YXVyYW50czogewogICAgICBxdWVyeTogZ2V0UmVzdGF1cmFudHMsCiAgICAgIHZhcmlhYmxlczogZnVuY3Rpb24gdmFyaWFibGVzKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBjb25kaXRpb25zOiB7CiAgICAgICAgICAgIHN0YXRlOiB0aGlzLmN1cnJTdGF0ZSwKICAgICAgICAgICAgY2l0eTogdGhpcy5jdXJyQ2l0eSwKICAgICAgICAgICAgaGlnaHdheTogdGhpcy5jdXJySGlnaHdheQogICAgICAgICAgfQogICAgICAgIH07CiAgICAgIH0KICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmFkZE1hcmtlcnModGhpcy5GaWx0ZXJlZExvY2F0aW9ucyk7CiAgfQp9Ow=="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHA;AACA;AAEA;AAQA;AAQA,0C,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAQA;AAkBA;EACAA,sBADA;EAEAC,IAFA,kBAEA;IACA;MACAC,aADA;MAEAC,YAFA;MAGAC,eAHA;MAIA;MACAC,oBALA;MAMAC,UANA;MAOAC,UAPA;MAQAC,iBARA;MASAC,qBATA;MAUAC,YAVA;MAWAC,eAXA;MAYAC;IAZA;EAcA,CAjBA;EAkBAC;IACAC;MACA;IACA,CAHA;IAIAC;MACA;IACA,CANA;IAOAC;MACA;IACA,CATA;IAUA;IACA;IACA;IACAC;MACA;IACA,CAfA;IAgBAC;MACA;QACA;MACA,CAFA,MAEA;QACA,iDACA;UAAA;QAAA,CADA;MAGA;IACA,CAxBA;IAyBAC;MAAA;;MACA;MACA;MACA;MACA;MACA;MACAC;QACA;MACA,CAFA,EAEA,CAFA;IAGA;EAlCA,GAmCAC,qCAnCA,CAlBA;EAuDAC;IACAhB,iBADA;IAEAC;MACAgB,gBADA;MAEAC,SAFA,uBAEA;QACA;UAAAC;QAAA;MACA;IAJA,CAFA;IAQAhB;MACAc,mBADA;MAEAC,SAFA,uBAEA;QACA;UACAE;YACAD,qBADA;YAEAE,mBAFA;YAGAC,yBAHA;YAIAC;UAJA;QADA;MAQA;IAXA,CARA;IAqBAnB;MACAa,kBADA;MAEAC,SAFA,uBAEA;QACA;UACAM;YAAAH;YAAAF;UAAA;QADA;MAGA;IANA,CArBA;IA6BA;IACAd;MACAY,qBADA;MAEAC,SAFA,uBAEA;QACA;UACAE;YACAD,qBADA;YAEAE,mBAFA;YAGAC;UAHA;QADA;MAOA;IAVA;EA9BA,CAvDA;EAkGAG,OAlGA,qBAkGA;IACA;EACA;AApGA","names":["name","data","currState","currCity","currHighway","currRestaurant","States","Cities","FilterByState","FilteredLocations","Highways","Restaurants","selectItems","methods","selectState","selectCity","selectHighway","selectRestaurant","selectRestaurantWithCheckBox","resetSelection","setTimeout","mapActions","apollo","query","variables","state","conditions","city","highway","restaurant","cityOrState","created"],"sourceRoot":"src/components","sources":["SearchCriteria.vue"],"sourcesContent":["<template>\n  <div id=\"search-criteria\">\n    <select\n      name=\"states\"\n      id=\"states\"\n      v-on:change=\"selectState\"\n      v-model=\"currState\"\n    >\n      <option value=\"\" disabled>Choose a State</option>\n      <option\n        vi-bind:value=\"el.state\"\n        v-for=\"el in States\"\n        v-bind:key=\"el.state\"\n        >{{ el.state }}</option\n      >\n    </select>\n\n    <select\n      name=\"cities\"\n      id=\"cities\"\n      v-on:change=\"selectCity\"\n      v-model=\"currCity\"\n    >\n      <option value=\"\" disabled>Choose a City</option>\n      <option\n        v-bind:value=\"el.city\"\n        v-for=\"el in Cities\"\n        v-bind:key=\"el.city\"\n        >{{ el.city }}</option\n      >\n    </select>\n\n    <select\n      name=\"highways\"\n      id=\"highways\"\n      v-on:change=\"selectHighway\"\n      v-model=\"currHighway\"\n    >\n      <option value=\"\" disabled>Choose a Highway</option>\n      <option\n        v-bind:value=\"el.highway\"\n        v-for=\"el in Highways\"\n        v-bind:key=\"el.highway\"\n        >{{ el.highway }}</option\n      >\n    </select>\n\n    <select\n      name=\"restaurants\"\n      id=\"restaurants\"\n      v-on:change=\"selectRestaurant\"\n      v-model=\"currRestaurant[0]\"\n    >\n      <option value=\"\" disabled>Choose a Restaurant</option>\n      <option\n        v-bind:value=\"el.restaurant_name\"\n        v-for=\"el in Restaurants\"\n        v-bind:key=\"el.restaurant_name\"\n        >{{ el.restaurant_name }}</option\n      >\n    </select>\n\n    <div id=\"restaurants-continer\">\n      <div\n        v-for=\"(el, index) in Restaurants\"\n        v-bind:key=\"el.id\"\n        id=\"restaurant\"\n      >\n        <input\n          type=\"checkbox\"\n          v-bind:id=\"el.restaurant_name\"\n          v-on:change=\"selectRestaurantWithCheckBox\"\n          v-bind:checked=\"currRestaurant.includes(el.restaurant_name)\"\n          v-model=\"selectItems[index]\"\n        />\n        <label v-bind:for=\"el.restaurant_name\">{{ el.restaurant_name }}</label>\n      </div>\n    </div>\n\n    <div class=\"button\">\n      <button\n        type=\"button\"\n        v-on:click=\"\n          addMarkers(FilteredLocations);\n          setView('searchResult');\n        \"\n      >\n        Search\n      </button>\n    </div>\n    <br />\n    <a\n      href=\"#\"\n      @click=\"\n        resetSelection();\n        setView('searchCriteria');\n      \"\n      >Clear Selections</a\n    >\n\n    <div v-for=\"location in FilteredLocations\" v-bind:key=\"location.id\">\n      <!-- {{Restaurants}} -->\n      {{ location }}\n      <!-- {{ location.latitude }}\n      {{ location.longitude }}\n      {{ location.state }}\n      {{ location.city }}\n      {{ location.highway }} -->\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from \"vuex\";\nimport gql from \"graphql-tag\";\n\nconst getStates = gql`\n  query {\n    States {\n      state\n    }\n  }\n`;\n\nconst getCities = gql`\n  query Cities($state: String) {\n    Cities(state: $state) {\n      city\n    }\n  }\n`;\n\nconst getHighways = gql`\n  query Highways($cityOrState: cityOrState) {\n    Highways(cityOrState: $cityOrState) {\n      highway\n    }\n  }\n`;\n\n// const getRestaurants = gql`\n//   query Restaurants {\n//     Restaurants {\n//       id\n//       name\n//       concept_icon\n//     }\n//   }\n// `;\n\nconst getRestaurants = gql`\n  query Restaurants($conditions: restaurantConditions) {\n    Restaurants(conditions: $conditions) {\n      restaurant_name\n    }\n  }\n`;\n\nconst getLocations = gql`\n  query FilteredLocations($conditions: filterConditions) {\n    FilteredLocations(conditions: $conditions) {\n      id\n      latitude\n      longitude\n      name\n      state\n      city\n      highway\n      exitNumber\n      address1\n      zip\n      main_phone\n    }\n  }\n`;\n\nexport default {\n  name: \"SearchCriteria\",\n  data() {\n    return {\n      currState: \"\",\n      currCity: \"\",\n      currHighway: \"\",\n      // currRestaurant: \"\",\n      currRestaurant: [\"\"],\n      States: [],\n      Cities: [],\n      FilterByState: [],\n      FilteredLocations: [],\n      Highways: [],\n      Restaurants: [],\n      selectItems: [],\n    };\n  },\n  methods: {\n    selectState: function(e) {\n      this.currState = e.target.value;\n    },\n    selectCity: function(e) {\n      this.currCity = e.target.value;\n    },\n    selectHighway: function(e) {\n      this.currHighway = e.target.value;\n    },\n    // selectRestaurant: function(e) {\n    //   this.currRestaurant = e.target.value;\n    // },\n    selectRestaurant: function(e) {\n      this.currRestaurant = [e.target.value];\n    },\n    selectRestaurantWithCheckBox: function(e) {\n      if (e.target.checked) {\n        this.currRestaurant = [...this.currRestaurant, e.target.id];\n      } else {\n        this.currRestaurant = this.currRestaurant.filter(\n          (el) => el !== e.target.id\n        );\n      }\n    },\n    resetSelection: function() {\n      this.currState = \"\";\n      this.currCity = \"\";\n      this.currHighway = \"\";\n      this.currRestaurant = [\"\"];\n      this.selectItems = [];\n      setTimeout(() => {\n        this.addMarkers(this.FilteredLocations);\n      }, 1);\n    },\n    ...mapActions([\"addMarkers\", \"setView\"]),\n  },\n  apollo: {\n    States: getStates,\n    Cities: {\n      query: getCities,\n      variables() {\n        return { state: this.currState };\n      },\n    },\n    FilteredLocations: {\n      query: getLocations,\n      variables() {\n        return {\n          conditions: {\n            state: this.currState,\n            city: this.currCity,\n            highway: this.currHighway,\n            restaurant: this.currRestaurant,\n          },\n        };\n      },\n    },\n    Highways: {\n      query: getHighways,\n      variables() {\n        return {\n          cityOrState: { city: this.currCity, state: this.currState },\n        };\n      },\n    },\n    // Restaurants: getRestaurants,\n    Restaurants: {\n      query: getRestaurants,\n      variables() {\n        return {\n          conditions: {\n            state: this.currState,\n            city: this.currCity,\n            highway: this.currHighway,\n          },\n        };\n      },\n    },\n  },\n  created() {\n    this.addMarkers(this.FilteredLocations);\n  },\n};\n</script>\n"]}]}