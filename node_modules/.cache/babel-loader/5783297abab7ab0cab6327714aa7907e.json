{"remainingRequest":"/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/node_modules/babel-loader/lib/index.js!/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/src/components/SearchCriteria.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/src/components/SearchCriteria.vue","mtime":1652317222543},{"path":"/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/node_modules/cache-loader/dist/cjs.js","mtime":1651747307098},{"path":"/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/node_modules/babel-loader/lib/index.js","mtime":1651747309998},{"path":"/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/node_modules/cache-loader/dist/cjs.js","mtime":1651747307098},{"path":"/Users/may/git/ccp4/ccp4-project.continuous-delivery-vue/node_modules/vue-loader/lib/index.js","mtime":1651747311058}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc2VhcmNoIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL21heS9naXQvY2NwNC9jY3A0LXByb2plY3QuY29udGludW91cy1kZWxpdmVyeS12dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbCBmcm9tICIvVXNlcnMvbWF5L2dpdC9jY3A0L2NjcDQtcHJvamVjdC5jb250aW51b3VzLWRlbGl2ZXJ5LXZ1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdGFnZ2VkVGVtcGxhdGVMaXRlcmFsIjsKCmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDUoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIHF1ZXJ5IEZpbHRlcmVkTG9jYXRpb25zKCRjb25kaXRpb25zOiBmaWx0ZXJDb25kaXRpb25zKSB7XG4gICAgRmlsdGVyZWRMb2NhdGlvbnMoY29uZGl0aW9uczogJGNvbmRpdGlvbnMpIHtcbiAgICAgIGlkXG4gICAgICBuYW1lXG4gICAgICBsYXRpdHVkZVxuICAgICAgbG9uZ2l0dWRlXG4gICAgICBzdGF0ZVxuICAgICAgY2l0eVxuICAgIH1cbiAgfVxuIl0pOwoKICBfdGVtcGxhdGVPYmplY3Q1ID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NSgpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q0KCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICBxdWVyeSBSZXN0YXVyYW50cyB7XG4gICAgUmVzdGF1cmFudHMge1xuICAgICAgaWRcbiAgICAgIG5hbWVcbiAgICB9XG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0NCA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDQoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MygpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgcXVlcnkgSGlnaHdheXMoJGNpdHlPclN0YXRlOiBjaXR5T3JTdGF0ZSkge1xuICAgIEhpZ2h3YXlzKGNpdHlPclN0YXRlOiAkY2l0eU9yU3RhdGUpIHtcbiAgICAgIGhpZ2h3YXlcbiAgICB9XG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0MyA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDMoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MigpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgcXVlcnkgQ2l0aWVzKCRzdGF0ZTogU3RyaW5nKSB7XG4gICAgQ2l0aWVzKHN0YXRlOiAkc3RhdGUpIHtcbiAgICAgIGNpdHlcbiAgICB9XG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0MiA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDIoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0KCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICBxdWVyeSB7XG4gICAgU3RhdGVzIHtcbiAgICAgIHN0YXRlXG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdCA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdCgpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBtYXBTdGF0ZSwgbWFwQWN0aW9ucyB9IGZyb20gInZ1ZXgiOwppbXBvcnQgZ3FsIGZyb20gImdyYXBocWwtdGFnIjsKdmFyIGdldFN0YXRlcyA9IGdxbChfdGVtcGxhdGVPYmplY3QoKSk7CnZhciBnZXRDaXRpZXMgPSBncWwoX3RlbXBsYXRlT2JqZWN0MigpKTsKdmFyIGdldEhpZ2h3YXlzID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDMoKSk7CnZhciBnZXRSZXN0YXVyYW50cyA9IGdxbChfdGVtcGxhdGVPYmplY3Q0KCkpOwp2YXIgZ2V0TG9jYXRpb25zID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDUoKSk7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiU2VhcmNoQ3JpdGVyaWEiLAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7Ly8gLy8gdGhpcy5hZGRNYXJrZXJzKHRoaXMuRmlsdGVyZWRMb2NhdGlvbnMpOwogICAgLy8gdGhpcy5nZXRMb2NhdGlvbnModGhpcy5GaWx0ZXJlZExvY2F0aW9ucyk7CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY3VyclN0YXRlOiAiIiwKICAgICAgY3VyckNpdHk6ICIiLAogICAgICBjdXJySGlnaHdheTogIiIsCiAgICAgIGN1cnJSZXN0YXVyYW50OiAiIiwKICAgICAgU3RhdGVzOiBbXSwKICAgICAgQ2l0aWVzOiBbXSwKICAgICAgRmlsdGVyQnlTdGF0ZTogW10sCiAgICAgIEZpbHRlcmVkTG9jYXRpb25zOiBbXSwKICAgICAgSGlnaHdheXM6IFtdLAogICAgICBSZXN0YXVyYW50czogW10KICAgIH07CiAgfSwKICBjb21wdXRlZDogbWFwU3RhdGUoewogICAgdGVzdDogZnVuY3Rpb24gdGVzdChzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuc2VhcmNoLnRlc3Q7CiAgICB9CiAgfSksCiAgbWV0aG9kczogX29iamVjdFNwcmVhZCh7CiAgICBzZWxlY3RTdGF0ZTogZnVuY3Rpb24gc2VsZWN0U3RhdGUoZSkgewogICAgICB0aGlzLmN1cnJTdGF0ZSA9IGUudGFyZ2V0LnZhbHVlOwogICAgfSwKICAgIHNlbGVjdENpdHk6IGZ1bmN0aW9uIHNlbGVjdENpdHkoZSkgewogICAgICB0aGlzLmN1cnJDaXR5ID0gZS50YXJnZXQudmFsdWU7CiAgICB9LAogICAgc2VsZWN0SGlnaHdheTogZnVuY3Rpb24gc2VsZWN0SGlnaHdheShlKSB7CiAgICAgIHRoaXMuY3VyckhpZ2h3YXkgPSBlLnRhcmdldC52YWx1ZTsKICAgIH0sCiAgICBzZWxlY3RSZXN0YXVyYW50OiBmdW5jdGlvbiBzZWxlY3RSZXN0YXVyYW50KGUpIHsKICAgICAgdGhpcy5jdXJyUmVzdGF1cmFudCA9IGUudGFyZ2V0LnZhbHVlOwogICAgfQogIH0sIG1hcEFjdGlvbnMoWyJhZGRNYXJrZXJzIl0pKSwKICBhcG9sbG86IHsKICAgIFN0YXRlczogZ2V0U3RhdGVzLAogICAgQ2l0aWVzOiB7CiAgICAgIHF1ZXJ5OiBnZXRDaXRpZXMsCiAgICAgIHZhcmlhYmxlczogZnVuY3Rpb24gdmFyaWFibGVzKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBzdGF0ZTogdGhpcy5jdXJyU3RhdGUKICAgICAgICB9OwogICAgICB9CiAgICB9LAogICAgRmlsdGVyZWRMb2NhdGlvbnM6IHsKICAgICAgcXVlcnk6IGdldExvY2F0aW9ucywKICAgICAgdmFyaWFibGVzOiBmdW5jdGlvbiB2YXJpYWJsZXMoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIGNvbmRpdGlvbnM6IHsKICAgICAgICAgICAgc3RhdGU6IHRoaXMuY3VyclN0YXRlLAogICAgICAgICAgICBjaXR5OiB0aGlzLmN1cnJDaXR5LAogICAgICAgICAgICBoaWdod2F5OiB0aGlzLmN1cnJIaWdod2F5LAogICAgICAgICAgICByZXN0YXVyYW50OiB0aGlzLmN1cnJSZXN0YXVyYW50CiAgICAgICAgICB9CiAgICAgICAgfTsKICAgICAgfQogICAgfSwKICAgIEhpZ2h3YXlzOiB7CiAgICAgIHF1ZXJ5OiBnZXRIaWdod2F5cywKICAgICAgdmFyaWFibGVzOiBmdW5jdGlvbiB2YXJpYWJsZXMoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIGNpdHlPclN0YXRlOiB7CiAgICAgICAgICAgIGNpdHk6IHRoaXMuY3VyckNpdHksCiAgICAgICAgICAgIHN0YXRlOiB0aGlzLmN1cnJTdGF0ZQogICAgICAgICAgfQogICAgICAgIH07CiAgICAgIH0KICAgIH0sCiAgICBSZXN0YXVyYW50czogZ2V0UmVzdGF1cmFudHMKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmFkZE1hcmtlcnModGhpcy5GaWx0ZXJlZExvY2F0aW9ucyk7CiAgfQp9Ow=="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;AAEA;AAQA;AAQA;AAQA;AASA;AAaA;EACAA,sBADA;EAEAC,OAFA,qBAEA,CACA;IACA;EACA,CALA;EAMAC,IANA,kBAMA;IACA;MACAC,aADA;MAEAC,YAFA;MAGAC,eAHA;MAIAC,kBAJA;MAKAC,UALA;MAMAC,UANA;MAOAC,iBAPA;MAQAC,qBARA;MASAC,YATA;MAUAC;IAVA;EAYA,CAnBA;EAoBAC;IACAC;MAAA;IAAA;EADA,EApBA;EAuBAC;IACAC;MACA;IACA,CAHA;IAIAC;MACA;IACA,CANA;IAOAC;MACA;IACA,CATA;IAUAC;MACA;IACA;EAZA,GAaAC,0BAbA,CAvBA;EAsCAC;IACAd,iBADA;IAEAC;MACAc,gBADA;MAEAC,SAFA,uBAEA;QACA;UAAAC;QAAA;MACA;IAJA,CAFA;IAQAd;MACAY,mBADA;MAEAC,SAFA,uBAEA;QACA;UACAE;YACAD,qBADA;YAEAE,mBAFA;YAGAC,yBAHA;YAIAC;UAJA;QADA;MAQA;IAXA,CARA;IAqBAjB;MACAW,kBADA;MAEAC,SAFA,uBAEA;QACA;UACAM;YAAAH;YAAAF;UAAA;QADA;MAGA;IANA,CArBA;IA6BAZ;EA7BA,CAtCA;EAqEAkB,OArEA,qBAqEA;IACA;EACA;AAvEA","names":["name","mounted","data","currState","currCity","currHighway","currRestaurant","States","Cities","FilterByState","FilteredLocations","Highways","Restaurants","computed","test","methods","selectState","selectCity","selectHighway","selectRestaurant","mapActions","apollo","query","variables","state","conditions","city","highway","restaurant","cityOrState","created"],"sourceRoot":"src/components","sources":["SearchCriteria.vue"],"sourcesContent":["<template>\n  <div id=\"search-criteria\">\n    <select name=\"states\" id=\"states\" v-on:change=\"selectState\">\n      <option hidden>Choose a State</option>\n      <option\n        vi-bind:value=\"el.state\"\n        v-for=\"el in States\"\n        v-bind:key=\"el.state\"\n        >{{ el.state }}</option\n      >\n    </select>\n\n    <select name=\"cities\" id=\"cities\" v-on:change=\"selectCity\">\n      <option hidden>Choose a City</option>\n      <option\n        v-bind:value=\"el.city\"\n        v-for=\"el in Cities\"\n        v-bind:key=\"el.city\"\n        >{{ el.city }}</option\n      >\n    </select>\n\n    <select name=\"highways\" id=\"highways\" v-on:change=\"selectHighway\">\n      <option hidden>Choose a Highway</option>\n      <option\n        v-bind:value=\"el.highway\"\n        v-for=\"el in Highways\"\n        v-bind:key=\"el.highway\"\n        >{{ el.highway }}</option\n      >\n    </select>\n\n    <select name=\"restaurants\" id=\"restaurants\" v-on:change=\"selectRestaurant\">\n      <option hidden>Choose a Restaurant</option>\n      <option\n        v-bind:value=\"el.name\"\n        v-for=\"el in Restaurants\"\n        v-bind:key=\"el.name\"\n        >{{ el.name }}</option\n      >\n    </select>\n\n    <div class=\"button\">\n      <button type=\"button\" v-on:click=\"addMarkers(FilteredLocations)\">\n        Search\n      </button>\n    </div>\n\n    <h4>Filtered Locations</h4>\n    <div v-for=\"location in FilteredLocations\" v-bind:key=\"location.id\">\n      <!-- {{ location }} -->\n      {{ location.latitude }}\n      {{ location.longitude }}\n      {{ location.state }}\n      {{ location.city }}\n      {{ location.highway }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from \"vuex\";\nimport gql from \"graphql-tag\";\n\nconst getStates = gql`\n  query {\n    States {\n      state\n    }\n  }\n`;\n\nconst getCities = gql`\n  query Cities($state: String) {\n    Cities(state: $state) {\n      city\n    }\n  }\n`;\n\nconst getHighways = gql`\n  query Highways($cityOrState: cityOrState) {\n    Highways(cityOrState: $cityOrState) {\n      highway\n    }\n  }\n`;\n\nconst getRestaurants = gql`\n  query Restaurants {\n    Restaurants {\n      id\n      name\n    }\n  }\n`;\n\nconst getLocations = gql`\n  query FilteredLocations($conditions: filterConditions) {\n    FilteredLocations(conditions: $conditions) {\n      id\n      name\n      latitude\n      longitude\n      state\n      city\n    }\n  }\n`;\n\nexport default {\n  name: \"SearchCriteria\",\n  mounted() {\n    // // this.addMarkers(this.FilteredLocations);\n    // this.getLocations(this.FilteredLocations);\n  },\n  data() {\n    return {\n      currState: \"\",\n      currCity: \"\",\n      currHighway: \"\",\n      currRestaurant: \"\",\n      States: [],\n      Cities: [],\n      FilterByState: [],\n      FilteredLocations: [],\n      Highways: [],\n      Restaurants: [],\n    };\n  },\n  computed: mapState({\n    test: (state) => state.search.test,\n  }),\n  methods: {\n    selectState: function(e) {\n      this.currState = e.target.value;\n    },\n    selectCity: function(e) {\n      this.currCity = e.target.value;\n    },\n    selectHighway: function(e) {\n      this.currHighway = e.target.value;\n    },\n    selectRestaurant: function(e) {\n      this.currRestaurant = e.target.value;\n    },\n    ...mapActions([\"addMarkers\"]),\n  },\n  apollo: {\n    States: getStates,\n    Cities: {\n      query: getCities,\n      variables() {\n        return { state: this.currState };\n      },\n    },\n    FilteredLocations: {\n      query: getLocations,\n      variables() {\n        return {\n          conditions: {\n            state: this.currState,\n            city: this.currCity,\n            highway: this.currHighway,\n            restaurant: this.currRestaurant,\n          },\n        };\n      },\n    },\n    Highways: {\n      query: getHighways,\n      variables() {\n        return {\n          cityOrState: { city: this.currCity, state: this.currState },\n        };\n      },\n    },\n    Restaurants: getRestaurants,\n  },\n  created() {\n    this.addMarkers(this.FilteredLocations);\n  }\n};\n</script>\n"]}]}